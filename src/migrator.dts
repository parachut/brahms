import { updateProductStock } from './utils/updateProductStock';
import { Op } from 'sequelize';

import { Inventory } from './models/Inventory';
import { InventoryStatus } from './enums/inventoryStatus';
import { Category } from './models/Category';
import { Bin } from './models/Bin';

export const migrator = async (req, res) => {
  const inventory = await Inventory.findAll({
    where: { status: InventoryStatus.INWAREHOUSE },
    order: [['product', 'demand', 'DESC']],
    include: [
      {
        association: 'product',
        include: ['category'],
      },
    ],
  });

  const bins = await Bin.findAll({
    where: { row: { [Op.gt]: 1 } },
    order: [['location', 'DESC'], ['row', 'DESC'], ['column', 'ASC']],
  });

  const categories = await Category.findAll({});

  function findBreadCrumbs(cat: Category) {
    const _categories = [cat];

    const getParent = async (child: Category) => {
      if (child.parentId) {
        const parent = categories.find((cate) => cate.id === child.parentId);

        if (parent) {
          _categories.push(parent);

          if (parent.parentId) {
            getParent(parent);
          }
        }
      }
    };

    getParent(cat);

    return _categories;
  }

  const binsFilled: any = {};

  for (const item of inventory) {
    const productBreadcrumbs = item.product.category
      ? findBreadCrumbs(item.product.category).reverse()
      : null;

    let bin = bins[0];

    if (binsFilled[bin.id]) {
      bin = bins[1];
    }

    item.binId = bin.id;
    await item.save();

    console.log(item.id, bin.location, bin.row, bin.column);

    if (
      !productBreadcrumbs ||
      !productBreadcrumbs.find((i) => i.name.search('Lenses') !== -1)
    ) {
      bins.splice(bins.findIndex((b) => b.id === bin.id), 1);
    } else {
      if (binsFilled[bin.id]) {
        binsFilled[bin.id]++;

        if (binsFilled[bin.id] > 2) {
          bins.splice(bins.findIndex((b) => b.id === bin.id), 1);
        }
      } else {
        binsFilled[bin.id] = 1;
      }
    }
  }

  console.log(inventory.length);

  res.send('ok');
};
